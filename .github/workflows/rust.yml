on: [push]

name: Rust CI - Create Release

jobs:
  check:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            override: true
            components: rustfmt, clippy

      # - name: Run cargo test
      #   uses: actions-rs/cargo@v1
      #   env:
      #     TURBOFLAKES_CONFIG_FILENAME: .env.example
      #   with:
      #     command: test

      # - name: Run cargo build 
      #   uses: actions-rs/cargo@v1
      #   env:
      #     TURBOFLAKES_CONFIG_FILENAME: .env.example
      #   with:
      #     command: build
      #     args: --release

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}


      - name: Git Archives
        id: git_archive
        run: |
          git archive --output=./$SOURCE_NAME.tar.gz --format=tar.gz HEAD
        env:
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
          SOURCE_BRANCH: ${{ steps.branch_name.outputs.SOURCE_BRANCH }}
          SOURCE_TAG: ${{ steps.branch_name.outputs.SOURCE_TAG }}

      - name: Upload Release Archive
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SOURCE_NAME: ${{ steps.branch_name.outputs.SOURCE_NAME }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./$SOURCE_NAME.tar.gz
          asset_name: $SOURCE_NAME
          asset_content_type: tar.gz

      # - name: Upload Release Asset
      #   id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./target/release/turboflakes-backend
      #     asset_name: turboflakes-backend
      #     asset_content_type: application/octet-stream
          